#!/usr/bin/python
import os
import matplotlib.pyplot as pyplot
import matplotlib.mlab   as mlab
from timec               import *

DESCRIP_SCRIPT = "Time your C program (with statistical graphic analysis)"

HELP_OUTPUTDIR = "Directory to place graphic output into (default: current)"

parser = argparse.ArgumentParser(description=DESCRIP_SCRIPT)
parser.add_argument("-n", type=int, default=100, help=HELP_NUMTRIALS,
                    dest="num_trials")
parser.add_argument("-o", type=int, default=0,help=HELP_OPTIMIZE,
                    dest="optimize_lvl")
parser.add_argument("-v", "--verbose", dest="verbose", action="store_true")
parser.add_argument("-d", default="./", help=HELP_OUTPUTDIR,
                    dest="output_dir")
parser.add_argument("testfiles", metavar="<test file>", nargs="+")
# TODO: argument for plot title

args = parser.parse_args()

# TODO: implement verbosity

dists         = []
dists_handles = []
dists_labels  = []

for file in args.testfiles:
    exec_time_stats = retrieve_exec_time_stats(file, file, args.num_trials,
                                               args.optimize_lvl)

    x_axis_ends = {"min": exec_time_stats["mean"]-exec_time_stats["stdev"]*3,
                   "max": exec_time_stats["mean"]+exec_time_stats["stdev"]*3}
    
    x_axis = linspace(x_axis_ends["min"], x_axis_ends["max"], 100)
    dist = mlab.normpdf(x_axis, exec_time_stats["mean"],
                        exec_time_stats["stdev"])
    plot = pyplot.plot(x_axis, dist)
    dist_handle, = plot
    dists_handles.append(dist_handle)
    dists_labels.append(path.splitext(path.basename(file))[0])

    if args.verbose:
        print(file+":")
        print(exec_time_stats)
    
pyplot.legend(dists_handles, dists_labels, "upper right")
pyplot.ylabel("Probability")
pyplot.xlabel("Execution time (ms)")
pyplot.title("TODO" +
             " (optimization level " + str(args.optimize_lvl) +")")

pyplot.savefig(args.output_dir+"plot" +"_"+str(args.optimize_lvl)+".png",
               bbox_inches=0)
